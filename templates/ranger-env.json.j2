{
	"Clusters": {
		"desired_configs": {
			"type": "ranger-env",
			"tag": "{{ range(00000000, 99999999) | random }}",
			"properties": {
					"xasecure.audit.destination.hdfs.dir" : "hdfs://{% if cluster_services.HDFS.HA is defined and cluster_services.HDFS.HA %}{{ cluster_name }}{% else %}{{ first_namenode }}:8020{% endif %}/ranger/audit",
					"xasecure.audit.destination.hdfs" : "true",
	        "admin_password" : "{{ranger_admin_password}}",
	        "admin_username" : "admin",
	        "create_db_dbuser" : "false",
	        "is_external_solrCloud_enabled" : "false",
	        "is_external_solrCloud_kerberos" : "false",
	        "is_nested_groupsync_enabled" : "false",
					{% if cluster_services.AMBARI_INFRA is defined %}
	        "xasecure.audit.destination.solr" : "true",
	        "is_solrCloud_enabled" : "true",
					{% else %}
	        "xasecure.audit.destination.solr" : "false",
	        "is_solrCloud_enabled" : "false",
					{% endif %}
	        "ranger-atlas-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.ATLAS is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.ATLAS %}Yes{% else %}No{% endif %}",
	        "ranger-hbase-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.HBASE is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.HBASE %}Yes{% else %}No{% endif %}",
	        "ranger-hdfs-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.HDFS is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.HDFS %}Yes{% else %}No{% endif %}",
	        "ranger-hive-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.HIVE is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.HIVE %}Yes{% else %}No{% endif %}",
	        "ranger-kafka-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.KAFKA is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.KAFKA %}Yes{% else %}No{% endif %}",
	        "ranger-knox-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.KNOX is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.KNOX %}Yes{% else %}No{% endif %}",
	        "ranger-nifi-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.NIFI is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.NIFI %}Yes{% else %}No{% endif %}",
	        "ranger-storm-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.STORM is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.STORM %}Yes{% else %}No{% endif %}",
	        "ranger-yarn-plugin-enabled" : "{%if cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.YARN is defined and cluster_services.RANGER is defined and cluster_services.RANGER.PLUGIN.YARN %}Yes{% else %}No{% endif %}",
	        "ranger_admin_log_dir" : "/var/log/ranger/admin",
					"admin_password": "{{ranger_admin_password}}",
	        "ranger_admin_password" : "{{ranger_admin_password}}",
					"rangerusersync_user_password": "{{rangerusersync_user_password}}",
					"rangertagsync_user_password": "{{rangertagsync_user_password}}",
					"keyadmin_user_password": "{{keyadmin_user_password}}",
	        "ranger_admin_username" : "amb_ranger_admin",	
	        "ranger_group" : "ranger",
	        "ranger_pid_dir" : "/var/run/ranger",
	        "ranger_solr_collection_name" : "ranger_audits",
	        "ranger_solr_config_set" : "ranger_audits",
	        "ranger_solr_replication_factor" : "1",
	        "ranger_solr_shards" : "1",
	        "ranger_user" : "ranger",
	        "ranger_usersync_log_dir" : "/var/log/ranger/usersync",
	        "xml_configurations_supported" : "true",{% raw %}
					"content": "#!/bin/bash\n\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Set Ranger-specific environment variables here.\nexport JAVA_HOME={{java_home}}\n\n{% if is_ranger_admin_host  %}\n# Ranger Admin specific environment variables here.\nexport RANGER_ADMIN_LOG_DIR={{admin_log_dir}}\nexport RANGER_PID_DIR_PATH={{ranger_pid_dir}}\nexport RANGER_USER={{unix_user}}\nranger_admin_max_heap_size={{ranger_admin_max_heap_size}}\n{% if security_enabled %}\nexport JAVA_OPTS=\" ${JAVA_OPTS} -Dzookeeper.sasl.client.username={{zookeeper_principal_primary}} \"\n{% endif %}\n{% endif %}\n\n{% if is_ranger_usersync_host  %}\n# Ranger Usersync specific environment variables here.\nexport USERSYNC_CONF_DIR={{ranger_ugsync_conf}}\nexport logdir={{usersync_log_dir}}\nexport USERSYNC_PID_DIR_PATH={{ranger_pid_dir}}\nexport UNIX_USERSYNC_USER={{unix_user}}\nranger_usersync_max_heap_size={{ranger_usersync_max_heap_size}}\n{% endif %}\n\n{% if is_ranger_tagsync_host  %}\n# Ranger Tagsync specific environment variables here.\nexport RANGER_TAGSYNC_LOG_DIR={{tagsync_log_dir}}\nexport TAGSYNC_PID_DIR_PATH={{ranger_pid_dir}}\nexport UNIX_TAGSYNC_USER={{unix_user}}\nranger_tagsync_max_heap_size={{ranger_tagsync_max_heap_size}}\n{% endif %}"{% endraw %}
			}
		}
	}
}
