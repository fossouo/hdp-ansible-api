wait: true
wait_timeout: 3600
capacity_scheduler_file: 'capacity-scheduler'
base_cluster:
  conf: ['global', 'hadoop-env']
vdf_source: "{{ vdf_path | default('templates/repo.xml.j2') }}"
sattelite_repo: false
services:
  - name: HDFS
    conf: ['core-site', 'hdfs-site', 'hdfs-log4j', 'ssl-client', 'ssl-server', 'hadoop-policy', 'hdfs-logsearch-conf']
    components:
      noha: ['NAMENODE', 'SECONDARY_NAMENODE', 'DATANODE']
      ha: ['NAMENODE', 'ZKFC', 'DATANODE', 'JOURNALNODE']
      client: ['HDFS_CLIENT']
    smoketest: ['HDFS_SERVICE_CHECK']
  - name: YARN
    conf: ['yarn-site', 'yarn-env', '{{capacity_scheduler_file}}', 'ssl-client', 'ssl-server', 'yarn-log4j', 'yarn-logsearch-conf']
    components:
      noha: ['RESOURCEMANAGER', 'NODEMANAGER', 'APP_TIMELINE_SERVER']
      ha: ['RESOURCEMANAGER', 'NODEMANAGER', 'APP_TIMELINE_SERVER']
      client: ['YARN_CLIENT']
    smoketest: YARN_SERVICE_CHECK
  - name: MAPREDUCE2
    conf: ['mapred-site', 'mapred-env', 'mapred-queue-acls', 'ssl-client', 'ssl-server', 'mapred-logsearch-conf']
    components:
      noha: ['HISTORYSERVER']
      ha: ['']
      client: ['MAPREDUCE2_CLIENT']
    smoketest: ['MAPREDUCE2_SERVICE_CHECK']
  - name: TEZ
    conf: ['tez-env', 'tez-site']
    components:
      noha: ['']
      ha: ['']
      client: ['TEZ_CLIENT']
    smoketest: ['TEZ_SERVICE_CHECK']
  - name: PIG
    conf: ['pig-properties', 'pig-env', 'pig-log4j']
    components:
      noha: ['']
      ha: ['']
      client: ['PIG']
    smoketest: ['PIG_SERVICE_CHECK']
  - name: SLIDER
    conf: ['slider-env', 'slider-log4j']
    components:
      noha: ['']
      ha: ['']
      client: ['SLIDER']
    smoketest: ['']
  - name: ZOOKEEPER
    conf: ['zoo.cfg', 'zookeeper-env', 'zookeeper-log4j', 'zookeeper-logsearch-conf']
    components:
      noha: ['ZOOKEEPER_SERVER']
      ha: ['']
      client: ['ZOOKEEPER_CLIENT']
    smoketest: ['ZOOKEEPER_QUORUM_SERVICE_CHECK']
  - name: HBASE
    conf: ['hbase-site', 'hbase-env', 'hbase-policy', 'hbase-log4j', 'hbase-logsearch-conf']
    components:
      noha: ['HBASE_MASTER', 'HBASE_REGIONSERVER']
      ha: ['HBASE_MASTER', 'HBASE_REGIONSERVER']
      client: ['HBASE_CLIENT']
    smoketest: ['HBASE_SERVICE_CHECK']
  - name: HIVE
    conf: ['hive-site', 'hive-env', 'hcat-env', 'hivemetastore-site', 'hiveserver2-site', 'webhcat-site', 'webhcat-env', 'beeline-log4j2', 'hive-atlas-application.properties', 'hive-exec-log4j', 'hive-exec-log4j2', 'hive-interactive-env', 'hive-interactive-site', 'hive-log4j', 'hive-log4j2', 'hive-logsearch-conf', 'hiveserver2-interactive-site', 'llap-cli-log4j2', 'llap-daemon-log4j', 'parquet-logging', 'tez-interactive-site', 'webhcat-log4j']
    components:
      noha: ['HIVE_SERVER', 'HIVE_METASTORE', 'WEBHCAT_SERVER']
      ha: ['HIVE_SERVER', 'HIVE_METASTORE', 'WEBHCAT_SERVER']
      client: ['HIVE_CLIENT', 'HCAT']
    smoketest: ['HIVE_SERVICE_CHECK', 'WEBHCAT_SERVICE_CHECK']
  - name: RANGER
    conf: ['ranger-admin-site', 'ranger-env', 'admin-properties', 'admin-log4j', 'ranger-ugsync-site', 'usersync-properties', 'usersync-log4j', 'ranger-solr-configuration']
    components:
      noha: ['RANGER_ADMIN', 'RANGER_USERSYNC']
      ha: ['']
      client: ['']
    smoketest: ['RANGER_SERVICE_CHECK']
  - name: AMBARI_METRICS
    conf: ['ams-hbase-env', 'ams-logsearch-conf', 'ams-ssl-server', 'ams-hbase-security-site', 'ams-log4j', 'ams-hbase-site', 'ams-env', 'ams-site', 'ams-hbase-policy', 'ams-grafana-env', 'ams-hbase-log4j', 'ams-ssl-client', 'ams-grafana-ini']
    components:
      noha: ['METRICS_MONITOR', 'METRICS_GRAFANA', 'METRICS_COLLECTOR']
      ha: ['METRICS_MONITOR', 'METRICS_GRAFANA', 'METRICS_COLLECTOR']
      client: ['']
    smoketest: ['AMBARI_METRICS_SERVICE_CHECK']
  - name: AMBARI_INFRA
    conf: ['infra-solr-log4j', 'infra-solr-xml', 'infra-solr-security-json', 'infra-solr-client-log4j', 'infra-logsearch-conf', 'infra-solr-env']
    components:
      noha: ['INFRA_SOLR']
      ha: ['INFRA_SOLR']
      client: ['INFRA_SOLR_CLIENT']
    smoketest: ['']
  - name: KAFKA
    conf: ['kafka-broker', 'kafka-env', 'kafka-log4j', 'kafka-logsearch-conf', 'kafka_client_jaas_conf', 'kafka_jaas_conf']
    components:
      noha: ['KAFKA_BROKER']
      ha: ['KAFKA_BROKER']
      client: ['']
    smoketest: ['KAFKA_SERVICE_CHECK']
  - name: SPARK2
    conf: ['livy2-conf', 'livy2-env', 'livy2-log4j-properties', 'livy2-spark-blacklist', 'spark2-defaults', 'spark2-env', 'spark2-hive-site-override', 'spark2-log4j-properties', 'spark2-logsearch-conf', 'spark2-metrics-properties', 'spark2-thrift-fairscheduler', 'spark2-thrift-sparkconf']
    components:
      noha: ['LIVY2_SERVER', 'SPARK2_JOBHISTORYSERVER', 'SPARK2_THRIFTSERVER']
      ha: ['LIVY2_SERVER', 'SPARK2_JOBHISTORYSERVER', 'SPARK2_THRIFTSERVER']
      client: ['SPARK2_CLIENT']
    smoketest: ['SPARK2_SERVICE_CHECK']
  - name: OOZIE
    conf: ['oozie-env', 'oozie-log4j', 'oozie-logsearch-conf', 'oozie-site']
    components:
      noha: ['OOZIE_SERVER']
      ha: ['OOZIE_SERVER']
      client: ['OOZIE_CLIENT']
    smoketest: ['OOZIE_SERVICE_CHECK']
  - name: ATLAS
    conf: ['application-properties', 'atlas-env', 'atlas-logsearch-conf', 'atlas-solrconfig', 'atlas-log4j']
    components:
      noha: ['ATLAS_SERVER']
      ha: ['']
      client: ['']
  - name: SMARTSENSE
    conf: ['activity-conf', 'activity-env', 'activity-log4j', 'activity-zeppelin-env', 'activity-zeppelin-interpreter', 'activity-zeppelin-shiro', 'activity-zeppelin-site', 'anonymization-rules', 'hst-agent-conf', 'hst-log4j', 'hst-server-conf', 'product-info']
    components:
      noha: ['ACTIVITY_ANALYZER', 'ACTIVITY_EXPLORER', 'HST_SERVER']
      ha: ['ACTIVITY_ANALYZER', 'ACTIVITY_EXPLORER', 'HST_SERVER']
      client: ['HST_AGENT']
    smoketest: ['SMARTSENSE_SERVICE_CHECK']
  - name: SQOOP
    conf: ['sqoop-atlas-application.properties', 'sqoop-env', 'sqoop-site']
    components:
      noha: ['SQOOP']
      ha: ['SQOOP']
      client: ['']
    smoketest: ['SQOOP_SERVICE_CHECK']
  - name: KNOX
    conf: ['topology','admin-topology','gateway-log4j','gateway-site', 'knox-env','knox-logsearch-conf','knoxsso-topology', 'ldap-log4j', 'users-ldif']
    components:
      noha: ['KNOX_GATEWAY']
      ha: ['KNOX_GATEWAY']
      client: []
    smoketest: ['KNOX_SERVICE_CHECK']
  - name: RANGER_KMS
    conf: ['dbks-site', 'kms-env', 'kms-log4j', 'kms-properties', 'kms-site', 'ranger-kms-audit', 'ranger-kms-logsearch-conf', 'ranger-kms-policymgr-ssl', 'ranger-kms-security', 'ranger-kms-site']
    components:
      noha: ['RANGER_KMS_SERVER']
      ha: ['RANGER_KMS_SERVER']
      client: ['']
    smoketest: ['RANGER_KMS_SERVICE_CHECK']
  - name: ZEPPELIN
    conf: ['zeppelin-config','zeppelin-env','zeppelin-logsearch-conf','zeppelin-shiro-ini', 'zeppelin-log4j-properties']
    components:
      noha: ['ZEPPELIN_MASTER']
      ha: ['ZEPPELIN_MASTER']
      client: ['']
    smoketest: ['']
